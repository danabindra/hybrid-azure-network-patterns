name: Rebuild diagrams from Mermaid
on:
  schedule:
    # 16:15 UTC = 09:15 PT
    - cron: "15 16 * * *"
  workflow_dispatch:
  push:
    paths:
      - 'diagrams/mermaid/**/*.mmd'
permissions:
  contents: write
jobs:
  build_mermaid:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Skip if no mermaid dir
        id: checkdir
        run: |
          if [ -d diagrams/mermaid ]; then echo "has_mmd=true" >> $GITHUB_OUTPUT; else echo "has_mmd=false" >> $GITHUB_OUTPUT; fi
      - name: Install mermaid-cli
        if: steps.checkdir.outputs.has_mmd == 'true'
        run: npm install -g @mermaid-js/mermaid-cli@10.9.1
      - name: Create puppeteer config
        if: steps.checkdir.outputs.has_mmd == 'true'
        run: |
          cat > puppeteer-config.json << EOF
          {
            "args": [
              "--no-sandbox",
              "--disable-setuid-sandbox",
              "--disable-dev-shm-usage",
              "--disable-gpu",
              "--no-first-run"
            ]
          }
          EOF
      - name: Build SVGs
        if: steps.checkdir.outputs.has_mmd == 'true'
        run: |
          mkdir -p diagrams/svg
          shopt -s nullglob
       failed_files=()
       for f in diagrams/mermaid/*.mmd; do
         base=$(basename "$f" .mmd)
         echo "Generating SVG for $f -> diagrams/svg/${base}.svg"
         if ! mmdc -p puppeteer-config.json -i "$f" -o "diagrams/svg/${base}.svg"; then
           failed_files+=("$f")
         fi
       done
       if [ ${#failed_files[@]} -gt 0 ]; then
         echo "Failed to generate diagrams for: ${failed_files[*]}"
         exit 1
       fi
